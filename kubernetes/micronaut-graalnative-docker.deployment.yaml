# This demonstrates how to run the image in Kubernetes and expose it via a load balancer
# Run by using:
# kubectl apply -f micronaut-graalnative-docker.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micronaut-graalnative-docker
spec:
  selector:
    matchLabels:
      app: micronaut-graalnative-docker-app
  replicas: 2
  template:
    metadata:
      labels:
        app: micronaut-graalnative-docker-app
    spec:
      containers:
        - name: micronaut-app
          image: micronaut-graalnative-docker:latest
          imagePullPolicy: IfNotPresent               # important - otherwise Kubernetes will try to pull from DockerHub

          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 5
            failureThreshold: 1

          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 1

---
# Create a load balancer for the app to expose it on localhost:8080
# $ curl localhost:8080/owners
apiVersion: v1
kind: Service
metadata:
  name: micronaut-graalnative-docker-loadbalancer
spec:
  selector:
    app: micronaut-graalnative-docker-app
  ports:
    - port: 8080        # the localhost port that we will use to expose the service
      targetPort: 8080  # the port on the container
  type: LoadBalancer

